CMAKE_MINIMUM_REQUIRED(VERSION 3.23)

PROJECT(rcf CXX)

FIND_PACKAGE(Boost)

SET( RCF_ROOT ${CMAKE_SOURCE_DIR} )

#IF(NOT BIN_PATH)
#    SET(BIN_PATH ${CMAKE_SOURCE_DIR}/bin)
#ENDIF()

#SET(EXECUTABLE_OUTPUT_PATH ${BIN_PATH} )
#SET(LIBRARY_OUTPUT_PATH ${BIN_PATH})

SET(
    RCF_DEFINES
    -DWIN32_LEAN_AND_MEAN
    -DBOOST_ALL_NO_LIB )

SET(
    RCF_INCLUDES 
    ${Boost_INCLUDE_DIRS} 
    ${RCF_ROOT}/include)
    
IF(MINGW)
    SET(RCF_LIBS ws2_32 mswsock crypt32)
ELSEIF(MSVC)
    SET(RCF_LIBS ws2_32)
    IF(CMAKE_CL_64)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /bigobj")
    ENDIF()
ELSE()
    SET(RCF_LIBS pthread dl)
ENDIF()

file(GLOB_RECURSE HEADER_FILES "${RCF_ROOT}/include/*.hpp")

ADD_LIBRARY(
    rcf
    STATIC 
    )
    

TARGET_SOURCES(rcf 
	PUBLIC
		${RCF_ROOT}/src/RCF/RCF.cpp	
	PUBLIC FILE_SET HEADERS BASE_DIRS "${RCF_ROOT}/include" FILES ${HEADER_FILES}
   		)


ADD_DEFINITIONS( ${RCF_DEFINES} )

INCLUDE_DIRECTORIES( ${RCF_INCLUDES} )

#LINK_DIRECTORIES( ${BIN_PATH} )


TARGET_LINK_LIBRARIES(rcf ${RCF_LIBS})

INSTALL( TARGETS rcf 
         FILE_SET HEADERS )
		